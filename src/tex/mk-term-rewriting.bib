
@book{arts_collection_2001,
  title = {A {{Collection}} of {{Examples}} for {{Termination}} of {{Term Rewriting Using Dependency Pairs}}},
  abstract = {This report contains a collection of examples to demonstrate the use and the power of the dependency pair technique developed by Arts and Giesl. This technique allows automated termination and innermost termination proofs for many term rewrite systems for which such proofs were not possible before.},
  author = {Arts, Thomas and Giesl, J\"urgen},
  year = {2001}
}

@book{BaaderTermrewritingall1999,
  title = {Term Rewriting and All That},
  urldate = {2017-05-26},
  publisher = {{Cambridge university press}},
  url = {https://books.google.com/books?hl=en\&lr=\&id=N7BvXVUCQk8C\&oi=fnd\&pg=PR9\&ots=cN35RbZA_i\&sig=zNk3Wk4w_4YRY6AMKxudY0gIuUI},
  author = {Baader, Franz and Nipkow, Tobias},
  year = {1999}
}

@inproceedings{roach_meijer_1997,
  title = {Meijer {{G}} Function Representations},
  booktitle = {Proceedings of the 1997 International Symposium on {{Symbolic}} and Algebraic Computation},
  publisher = {{ACM}},
  author = {Roach, Kelly},
  year = {1997},
  pages = {205--211}
}

@article{artsa_termination_1998,
  title = {Termination of Term Rewriting Using Dependency Pairs},
  urldate = {2016-02-17},
  url = {http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.43.160\&rep=rep1\&type=pdf},
  author = {Artsa, Thomas and Giesl, J\"urgen},
  year = {1998}
}

@article{kaltofen_challenges_2000,
  title = {Challenges of {{Symbolic Computation}}: {{My Favorite Open Problems}}},
  volume = {29},
  issn = {0747-7171},
  shorttitle = {Challenges of {{Symbolic Computation}}},
  abstract = {The success of the symbolic mathematical computation discipline is striking. The theoretical advances have been continuous and significant: Gr\"obner bases, the Risch integration algorithm, integer lattice basis reduction, hypergeometric summation algorithms, etc. From the beginning in the early 1960s, it has been the tradition of our discipline to create software that makes our ideas readily available to scientists, engineers, and educators: SAC-1, Reduce, Macsyma, etc. The commercial viability of our system products is proven by Maple and Mathematica. Today's user communities of symbolic computation systems are diverse: educators, engineers, stock market analysts, etc. The mathematics and computer science in the design and implementation of our algorithms are sophisticated. The research challenges in symbolic computation at the close of the twentieth century are formidable. I state my favorite eight open problems in symbolic computation. They range from problems in symbolic/numeric computing, symbolic algorithm synthesis, to system component construction. I have worked on seven of my problems and borrowed one from George Collins. I present background to each of my problems and a clear-cut test that evaluates whether a proposed attack has solved one of my problems. An additional ninth open problem by Rob Corless and David Jeffrey on complex function semantics is given in an appendix.},
  number = {6},
  urldate = {2016-02-17},
  journal = {Journal of Symbolic Computation},
  url = {http://www.sciencedirect.com/science/article/pii/S0747717100903705},
  author = {Kaltofen, Erich},
  month = jun,
  year = {2000},
  pages = {891-919}
}

@article{sontag_symbolic_2010,
  title = {A Symbolic Computation Approach to a Problem Involving Multivariate {{Poisson}} Distributions},
  volume = {44},
  issn = {0196-8858},
  abstract = {Multivariate Poisson random variables subject to linear integer constraints arise in several application areas, such as queuing and biomolecular networks. This note shows how to compute conditional statistics in this context, by employing Wilf\textendash{}Zeilberger theory and associated algorithms. A symbolic computation package has been developed and is made freely available. A discussion of motivating biomolecular problems is also provided.},
  number = {4},
  urldate = {2016-02-15},
  journal = {Advances in Applied Mathematics},
  url = {http://www.sciencedirect.com/science/article/pii/S0196885809001055},
  author = {Sontag, Eduardo D. and Zeilberger, Doron},
  month = may,
  year = {2010},
  pages = {359-377}
}

@article{hirokawa_automating_2005,
  series = {19th {{International Conference}} on {{Automated Deduction}} ({{CADE}}-19){{Cade}}},
  title = {Automating the Dependency Pair Method},
  volume = {199},
  issn = {0890-5401},
  abstract = {Developing automatable methods for proving termination of term rewrite systems that resist traditional techniques based on simplification orders has become an active research area in the past few years. The dependency pair method of Arts and Giesl is one of the most popular such methods. However, there are several obstacles that hamper its automation. In this paper we present new ideas to overcome these obstacles. We provide ample numerical data supporting our ideas.},
  number = {1\textendash{}2},
  urldate = {2016-02-17},
  journal = {Information and Computation},
  url = {http://www.sciencedirect.com/science/article/pii/S0890540104001762},
  author = {Hirokawa, Nao and Middeldorp, Aart},
  month = jun,
  year = {2005},
  keywords = {Dependency pair method,Term rewriting,Termination},
  pages = {172-199}
}

@article{deschreye_termination_1994,
  title = {Termination of Logic Programs: The Never-Ending Story},
  volume = {19},
  issn = {0743-1066},
  shorttitle = {Special {{Issue}}},
  abstract = {We survey termination analysis techniques for Logic Programs. We give an extensive introduction to the topic. We recall several motivations for the work, and point out the intuitions behind a number of LP-specific issues that turn up, such as: the study of different classes of programs and LP languages, of different classes of queries and of different selection rules, the difference between existential and universal termination, and the treatment of backward unification and local variables. Then, we turn to more technical aspects: the structure of the termination proofs, the selection of well-founded orderings, norms and level mappings, the inference of interargument relations, and special treatments proposed for dealing with mutual recursion. For each of these, we briefly sketch the main approaches presented in the literature, using a fixed example as a file rouge. We conclude with some comments on loop detection and cycle unification and state some open problems.},
  urldate = {2016-02-17},
  journal = {The Journal of Logic Programming},
  url = {http://www.sciencedirect.com/science/article/pii/0743106694900272},
  author = {{de Schreye}, Danny and Decorte, Stefaan},
  month = may,
  year = {1994},
  pages = {199-260}
}

@article{SwordsGuidedSearchminiKanren,
  title = {Guided {{Search}} in {{miniKanren}}},
  author = {Swords, Cameron and Friedman, Daniel P.}
}

@phdthesis{ByrdRelationalProgrammingminiKanren2009,
  title = {Relational {{Programming}} in {{miniKanren}}: {{Techniques}}, {{Applications}}, and {{Implementations}}},
  shorttitle = {Relational {{Programming}} in {{miniKanren}}},
  school = {faculty of the University Graduate School in partial fulfillment of the requirements for the degree Doctor of Philosophy in the Department of Computer Science, Indiana University},
  author = {Byrd, William E.},
  year = {2009}
}

@inproceedings{Hemannsmallembeddinglogic2016,
  title = {A Small Embedding of Logic Programming with a Simple Complete Search},
  booktitle = {Proceedings of the 12th {{Symposium}} on {{Dynamic Languages}}},
  publisher = {{ACM}},
  author = {Hemann, Jason and Friedman, Daniel P. and Byrd, William E. and Might, Matthew},
  year = {2016},
  pages = {96--107}
}

@inproceedings{HemannSimpleCompleteSearch2018,
  title = {A {{Simple Complete Search}} for {{Logic Programming}}},
  volume = {58},
  booktitle = {{{OASIcs}}-{{OpenAccess Series}} in {{Informatics}}},
  publisher = {{Schloss Dagstuhl-Leibniz-Zentrum fuer Informatik}},
  author = {Hemann, Jason and Friedman, Daniel P. and Byrd, William E. and Might, Matthew},
  year = {2018}
}

@article{BoskinSurprisinglyCompetitiveConditional2018,
  title = {A {{Surprisingly Competitive Conditional Operator}}},
  url = {https://www.brinckerhoff.org/scheme2018/papers/Boskin_Ma_Christiansen_Friedman.pdf},
  author = {Boskin, Benjamin Strahan and Ma, Weixi and Christiansen, David Thrane and Friedman, Daniel P.},
  year = {2018}
}

@incollection{KnuthSimplewordproblems1983,
  title = {Simple Word Problems in Universal Algebras},
  booktitle = {Automation of {{Reasoning}}},
  publisher = {{Springer}},
  author = {Knuth, Donald E. and Bendix, Peter B.},
  year = {1983},
  pages = {342--376}
}

@article{ZhangNeuralGuidedConstraint2018,
  archivePrefix = {arXiv},
  eprinttype = {arxiv},
  eprint = {1809.02840},
  primaryClass = {cs, stat},
  title = {Neural {{Guided Constraint Logic Programming}} for {{Program Synthesis}}},
  abstract = {Synthesizing programs using example input/outputs is a classic problem in artificial intelligence. We present a method for solving Programming By Example (PBE) problems by using a neural model to guide the search of a constraint logic programming system called miniKanren. Crucially, the neural model uses miniKanren's internal representation as input; miniKanren represents a PBE problem as recursive constraints imposed by the provided examples. We explore Recurrent Neural Network and Graph Neural Network models. We contribute a modified miniKanren, drivable by an external agent, available at https://github.com/xuexue/neuralkanren. We show that our neural-guided approach using constraints can synthesize programs faster in many cases, and importantly, can generalize to larger problems.},
  urldate = {2019-03-13},
  journal = {arXiv:1809.02840 [cs, stat]},
  url = {http://arxiv.org/abs/1809.02840},
  author = {Zhang, Lisa and Rosenblatt, Gregory and Fetaya, Ethan and Liao, Renjie and Byrd, William E. and Might, Matthew and Urtasun, Raquel and Zemel, Richard},
  month = sep,
  year = {2018},
  keywords = {Computer Science - Machine Learning,Statistics - Machine Learning}
}

@article{DickAutomatingknuthbendix1990,
  title = {Automating the Knuth Bendix Ordering},
  volume = {28},
  number = {2},
  journal = {Acta Informatica},
  author = {Dick, Jeremy and Kalmus, John and Martin, Ursula},
  year = {1990},
  pages = {95--119}
}

@inproceedings{MartinHowchooseweights1987,
  title = {How to Choose the Weights in the {{Knuth Bendix}} Ordering},
  booktitle = {International {{Conference}} on {{Rewriting Techniques}} and {{Applications}}},
  publisher = {{Springer}},
  author = {Martin, Ursula},
  year = {1987},
  pages = {42--53}
}

@techreport{Middeldorprewriteapproachpolynomial1991,
  title = {A Rewrite Approach to Polynomial Ideal Theory},
  institution = {{Centrum voor Wiskunde en Informatica}},
  author = {Middeldorp, Aart and Starcevic, Mirjana},
  year = {1991}
}

@book{HarrisonIntroductionlogicautomated2007,
  title = {Introduction to Logic and Automated Theorem Proving},
  publisher = {{Cambridge University Press. Forthcoming}},
  author = {Harrison, John},
  year = {2007}
}


